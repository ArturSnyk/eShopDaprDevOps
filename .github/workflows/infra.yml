on:
  push:
    branches:
    - main

    paths:
    - bicep/**    
    - .github/workflows/infra.yml        
    - .github/workflows/script.sh
  workflow_dispatch:
        
jobs:
  create-azure-resources:
    
    env:
      LOCATION: 'eastus'
      RESOURCE_GROUP_NAME: 'rg-aks-devsecops'

    runs-on: ubuntu-latest

    steps:

      - uses: actions/checkout@v2

      - name: Azure Login
        uses: Azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}    

      - name: Create Resource Group
        run: |
          az group create -n ${{ env.RESOURCE_GROUP_NAME }} -l ${{ env.LOCATION }} 

      # If any error is present the GH action will stop there
      # this avoid to try to deploy the template for nothing
      - name: Convert to ARM template
        run: |
          bicep build ./bicep/main.bicep  

      # Replace parameter in parameter file
      - name: Replace token location
        uses: cschleiden/replace-tokens@v1.0
        with:        
          tokenPrefix: __        
          tokenSuffix: __        
          files: '["bicep/main.parameters.json"]'
        env:
          location: ${{ env.LOCATION  }}
          adminUsername: ${{ secrets.ADMIN_USERNAME }}
          adminPassword: ${{ secrets.ADMIN_PASSWORD }}          

      # See the change to be deployed, a good practice
      # will be to leverage environment and approvers
      - name: what-if
        run: |
          az deployment group what-if --resource-group ${{ env.RESOURCE_GROUP_NAME }} --template-file ./bicep/main.json --parameters ./bicep/main.parameters.json

      # This steps is needed only if running the deployment multiple times
      # if the VM exists already the cloudinit failed the deployment
      - name: Delete Jumpbox if exists
        run: |
          $vmCheck = az vm list --query "[?name=='jumpbox']" | ConvertFrom-Json
          $vmExists = $vmCheck.Length -gt 0
          if ($vmExists) {            
            az vm delete -g ${{ env.RESOURCE_GROUP_NAME }} -n jumpbox
          }
        shell: pwsh

      - name: Deploy Azure Resources
        id: armDeployment
        uses: azure/arm-deploy@v1
        with:
          subscriptionId: ${{ secrets.SUBSCRIPTION_ID }}
          resourceGroupName: ${{ env.RESOURCE_GROUP_NAME }}
          template: ./bicep/main.json
          parameters: ./bicep/main.parameters.json     

      - name: logout
        run: |
          az logout                              