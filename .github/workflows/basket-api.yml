name: basket-api

on:
  workflow_dispatch:
  # push:
  #   branches:
  #   - main

  #   paths:
  #   - src/BuildingBlocks/**
  #   - src/Services/Basket/**
  #   - .github/workflows/basket-api.yml
  
  # pull_request:
  #   branches:
  #   - main

  #   paths:
  #   - src/BuildingBlocks/**
  #   - src/Services/Basket/**
  #   - .github/workflows/basket-api.yml
env:
  SERVICE: basket-api
  IMAGE: basket.api
  DOTNET_VERSION: 6.0.x

jobs:

  BuildAndDeploy:
    runs-on: self-hosted
    steps:
    - name: 'Checkout Github Action'
      uses: actions/checkout@master

    - name: Setup dotnet
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: ${{ env.DOTNET_VERSION }}

    - name: Build
      run: |
        dotnet restore "src/Services/Basket/Basket.API/Basket.API.csproj"
        cd src/Services/Basket/Basket.API
        dotnet build --no-restore

    # - name: Enable experimental features for the Docker daemon and CLI
    #   run: |
    #       echo $'{\n  "experimental": true\n}' | sudo tee /etc/docker/daemon.json
    #       mkdir -p ~/.docker
    #       echo $'{\n  "experimental": "enabled"\n}' | sudo tee ~/.docker/config.json
    #       sudo service docker restart
    #       docker version -f '{{.Client.Experimental}}'
    #       docker version -f '{{.Server.Experimental}}'
    
    - name: Login to Container Registry
      run: |
        sudo az acr login -n ${{ secrets.AZURE_CONTAINER_REGISTRY }} -u ${{ secrets.REGISTRY_USERNAME }} -p ${{ secrets.REGISTRY_PASSWORD }}
    
    - name: Build Image
      run: |
        sudo docker build . -t ${{ secrets.AZURE_CONTAINER_REGISTRY }}/${{ env.SERVICE }}:${{ github.sha }}
      working-directory: ./src/Services/Basket/Basket.API

    - name: Push Image
      run: |
        sudo docker push ${{ secrets.AZURE_CONTAINER_REGISTRY }}/hello-world:${{ github.sha }} 
      working-directory: ./src/Services/Basket/Basket.API

    # - name: Login to Container Registry
    #   uses: docker/login-action@v1
    #   with:
    #     username: ${{ secrets.USERNAME }}
    #     password: ${{ secrets.PASSWORD }}

    # - name: Compose build ${{ env.SERVICE }}
    #   run: sudo -E docker-compose build ${{ env.SERVICE }}
    #   working-directory: ./src
    #   shell: bash
    #   env:
    #     REGISTRY: ${{ secrets.REGISTRY_ENDPOINT }}

    # - name: Compose push ${{ env.SERVICE }}
    #   run: sudo -E docker-compose push ${{ env.SERVICE }}
    #   working-directory: ./src
    #   shell: bash
    #   env:
    #     REGISTRY: ${{ secrets.REGISTRY_ENDPOINT }}
